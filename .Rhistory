filter(grepl(i, level))
if (dim(taxon_df)[1] != 0) {
pos_suscept_vector <- rep(0, length(taxa))
neg_suscept_vector <- rep(0, length(taxa))
pos_level <- taxon_df %>%
filter(boo)
if ((dim(pos_level)[1] != 0)) {
pos_suscept_vector <- grepl(paste0(pos_level$name, collapse = "|"), taxa)
pos_suscept_vector <- pos_suscept_vector*1
}
neg_level <- taxon_df %>%
filter(!boo)
if ((dim(neg_level)[1] != 0)) {
neg_suscept_vector <- grepl(paste0(neg_level$name, collapse = "|"), taxa)
neg_suscept_vector <- neg_suscept_vector*-1
}
new_vector <- pos_suscept_vector + neg_suscept_vector
print(new_vector)
zero_vector_idx <- which(new_vector == 0)
old_suscept_vector <- suscept_vector[zero_vector_idx]
suscept_vector <- new_vector
suscept_vector[zero_vector_idx] <- old_suscept_vector
}
}
suscept_vector[which(suscept_vector == -1)] <- 0
suscept_vector
}
my_func(a, "vancomycin")
a
my_func <- function(taxa, abx) {
suscept_vector <- rep(0, length(taxa))
for(each_idx in abx) {
abx_df <- filter(grep_df, grepl(each_idx, attribute))
for(lvl in c("Phylum", "Class", "Order", "Family", "Genus", "Species")) {
taxon_df <- abx_df %>%
filter(grepl(lvl, level))
if (dim(taxon_df)[1] != 0) {
pos_suscept_vector <- rep(0, length(taxa))
neg_suscept_vector <- rep(0, length(taxa))
pos_level <- taxon_df %>%
filter(boo)
if ((dim(pos_level)[1] != 0)) {
pos_suscept_vector <- grepl(paste0(pos_level$name, collapse = "|"), taxa)
pos_suscept_vector <- pos_suscept_vector*1
}
neg_level <- taxon_df %>%
filter(!boo)
if ((dim(neg_level)[1] != 0)) {
neg_suscept_vector <- grepl(paste0(neg_level$name, collapse = "|"), taxa)
neg_suscept_vector <- neg_suscept_vector*-1
}
new_vector <- pos_suscept_vector + neg_suscept_vector
#print(new_vector)
zero_vector_idx <- which(new_vector == 0)
old_suscept_vector <- suscept_vector[zero_vector_idx]
suscept_vector <- new_vector
suscept_vector[zero_vector_idx] <- old_suscept_vector
}
}
}
suscept_vector[which(suscept_vector == -1)] <- 0
suscept_vector
}
my_func(a, "vancomycin")
a
a
a[6] <- "k__; p__; c__; o__; f__; g__; s__Bacteroidia"
a
my_func(a, "vancomycin")
my_func(a, c("gram_positive", "vancomycin"))
#' @param delim How taxonomic levels are separated in row names
#'
#' @return The calculated antibiotics index for each sample
#' @export
#'
#' @examples
#' \dontrun{
#' vancomycin_index(test_df)
#' }
#'
vancomycin_index <- function(abundance, lineage) {
idx <- c("gram_positive", "vancomycin")
suscept_vector <- is_susceptible(lineage, idx)
calc_index(abundance, suscept_vector)
}
test_df
vancomycin_index(test_df)
is_susceptible <- function(taxa, idx) {
suscept_vector <- rep(0, length(taxa))
for(each_idx in idx) {
abx_df <- filter(grep_df, grepl(each_idx, attribute))
for(lvl in c("Phylum", "Class", "Order", "Family", "Genus", "Species")) {
taxon_df <- abx_df %>%
filter(grepl(lvl, level))
if (dim(taxon_df)[1] != 0) {
pos_suscept_vector <- rep(0, length(taxa))
neg_suscept_vector <- rep(0, length(taxa))
pos_level <- taxon_df %>%
filter(boo)
if ((dim(pos_level)[1] != 0)) {
pos_suscept_vector <- grepl(paste0(pos_level$name, collapse = "|"), taxa)
pos_suscept_vector <- pos_suscept_vector*1
}
neg_level <- taxon_df %>%
filter(!boo)
if ((dim(neg_level)[1] != 0)) {
neg_suscept_vector <- grepl(paste0(neg_level$name, collapse = "|"), taxa)
neg_suscept_vector <- neg_suscept_vector*-1
}
new_vector <- pos_suscept_vector + neg_suscept_vector
#print(new_vector)
zero_vector_idx <- which(new_vector == 0)
old_suscept_vector <- suscept_vector[zero_vector_idx]
suscept_vector <- new_vector
suscept_vector[zero_vector_idx] <- old_suscept_vector
}
}
}
suscept_vector[which(suscept_vector == -1)] <- 0
suscept_vector
}
vancomycin_index(test_df)
vancomycin_index(test_df, row.names(test_df))
#' Calculate the index based on the susceptible vector
#'
#' @param sample_vector The vector of taxonomic abundances for a sample
#' @param suscept_vector The vector of how susceptible a species is to the specified antibiotics
#'
#' @return The calculated antibiotics index for a sample
#'
calc_index <- function(sample_vector, suscept_vector) {
TF_suscept_vector <- suscept_vector > 0.5
sum_suscept_taxa <- sum(sample_vector[TF_suscept_vector])
log10(sum_suscept_taxa/(1-sum_suscept_taxa))
}
vancomycin_index(test_df, row.names(test_df))
vancomycin_index(test_df, row.names(test_df))
test_df[, 1]
vancomycin_index(test_df[, 1], row.names(test_df))
vancomycin_index(test_df[, 2], row.names(test_df))
vancomycin_index(test_df[, 3], row.names(test_df))
vancomycin_index(test_df[, 4], row.names(test_df))
vancomycin_index(test_df[, 5], row.names(test_df))
test_df
View(grep_df)
##manually curated genus phenotypes from Ceylan
phenotypes_genus <- utils::read.delim(here::here("data-raw", "genera_0831.txt"), sep = "\t", header = TRUE) %>%
select(name, aerobic_status, gram_stain, doi) %>%
unique() %>%
mutate(level = "Genus") %>%
mutate(anaerobe = ifelse(grepl("anaerobe", aerobic_status), ifelse(grepl("microaerobe or anaerobe|facultative anaerobe", aerobic_status), FALSE, TRUE), FALSE)) %>%
mutate(gram_positive = ifelse(gram_stain == "Gram-positive", TRUE, FALSE)) %>%
mutate(doi = as.character(doi), name = as.character(name)) %>%
select(-c(aerobic_status, gram_stain)) %>%
pivot_longer(cols = c("anaerobe", "gram_positive"), values_to = "boo", names_to = "attribute")
View(phenotypes_genus)
phenotypes_genus <- utils::read.delim(here::here("data-raw", "genera_0831.txt"), sep = "\t", header = TRUE) %>%
select(name, aerobic_status, gram_stain, doi)
##manually curated genus phenotypes from Ceylan
phenotypes_genus <- utils::read.delim(here::here("data-raw", "genera_0831.txt"), sep = "\t", header = TRUE) %>%
select(name, aerobic_status, gram_stain, doi) %>%
unique() %>%
mutate(level = "Genus") %>%
mutate(anaerobe = ifelse(grepl("anaerobe", aerobic_status), ifelse(grepl("microaerobe or anaerobe|facultative anaerobe", aerobic_status), FALSE, TRUE), FALSE)) %>%
mutate(aerobe = ifelse(grepl("anaerobe", aerobic_status), FALSE, TRUE)) %>%
mutate(gram_positive = ifelse(gram_stain == "Gram-positive", TRUE, FALSE)) %>%
mutate(gram_negative = ifelse(gram_stain == "Gram-negative", TRUE, FALSE)) %>%
mutate(doi = as.character(doi), name = as.character(name)) %>%
select(-c(aerobic_status, gram_stain)) %>%
pivot_longer(cols = c("anaerobe", "gram_positive"), values_to = "boo", names_to = "attribute")
phenotypes_genus[phenotypes_genus$name=="Gemella"&phenotypes_genus$attribute=="gram_positive", "boo"] <- TRUE
phenotypes_genus <- phenotypes_genus[-which(phenotypes_genus$name=="Bifidobacterium"&phenotypes_genus$attribute=="anaerobe"), ]
phenotypes_genus <- utils::read.delim(here::here("data-raw", "genera_0831.txt"), sep = "\t", header = TRUE) %>%
select(name, aerobic_status, gram_stain, doi) %>%
unique() %>%
mutate(level = "Genus") %>%
mutate(anaerobe = ifelse(grepl("anaerobe", aerobic_status), ifelse(grepl("microaerobe or anaerobe|facultative anaerobe", aerobic_status), FALSE, TRUE), FALSE)) %>%
mutate(aerobe = ifelse(grepl("anaerobe", aerobic_status), FALSE, TRUE)) %>%
mutate(gram_positive = ifelse(gram_stain == "Gram-positive", TRUE, FALSE)) %>%
mutate(gram_negative = ifelse(gram_stain == "Gram-negative", TRUE, FALSE)) %>%
mutate(doi = as.character(doi), name = as.character(name))
phenotypes_genus <- utils::read.delim(here::here("data-raw", "genera_0831.txt"), sep = "\t", header = TRUE) %>%
select(name, aerobic_status, gram_stain, doi) %>%
unique() %>%
mutate(level = "Genus") %>%
mutate(anaerobe = ifelse(grepl("anaerobe", aerobic_status), ifelse(grepl("microaerobe or anaerobe|facultative anaerobe", aerobic_status), FALSE, TRUE), FALSE)) %>%
mutate(aerobe = ifelse(grepl("anaerobe|not indicated", aerobic_status), FALSE, TRUE)) %>%
mutate(gram_positive = ifelse(gram_stain == "Gram-positive", TRUE, FALSE)) %>%
mutate(gram_negative = ifelse(gram_stain == "Gram-negative", TRUE, FALSE)) %>%
mutate(doi = as.character(doi), name = as.character(name))
phenotypes_genus <- utils::read.delim(here::here("data-raw", "genera_0831.txt"), sep = "\t", header = TRUE) %>%
select(name, aerobic_status, gram_stain, doi) %>%
unique() %>%
mutate(level = "Genus") %>%
mutate(anaerobe = ifelse(grepl("anaerobe", aerobic_status), ifelse(grepl("microaerobe or anaerobe|facultative anaerobe", aerobic_status), FALSE, TRUE), FALSE)) %>%
mutate(aerobe = ifelse(grepl("anaerobe|not indicated|variable", aerobic_status), FALSE, TRUE)) %>%
mutate(gram_positive = ifelse(gram_stain == "Gram-positive", TRUE, FALSE)) %>%
mutate(gram_negative = ifelse(gram_stain == "Gram-negative", TRUE, FALSE)) %>%
mutate(doi = as.character(doi), name = as.character(name))
phenotypes_species <- utils::read.delim(here::here("data-raw", "species_0831.txt"), sep = "\t", header = TRUE) %>%
select(name, aerobic_status, gram_stain, doi) %>%
unique() %>%
mutate(level = "Species") %>%
mutate(anaerobe = ifelse(grepl("anaerobe", aerobic_status), ifelse(grepl("aerobe, microaerobe, or anaerobe|microaerobe or anaerobe|facultative anaerobe", aerobic_status), FALSE, TRUE), FALSE)) %>%
mutate(gram_positive = ifelse(gram_stain == "Gram-positive", TRUE, FALSE)) %>%
mutate(doi = as.character(doi), name = as.character(name))
phenotypes_species <- utils::read.delim(here::here("data-raw", "species_0831.txt"), sep = "\t", header = TRUE) %>%
select(name, aerobic_status, gram_stain, doi) %>%
unique() %>%
mutate(level = "Species") %>%
mutate(anaerobe = ifelse(grepl("anaerobe", aerobic_status), ifelse(grepl("aerobe, microaerobe, or anaerobe|microaerobe or anaerobe|facultative anaerobe", aerobic_status), FALSE, TRUE), FALSE)) %>%
mutate(aerobe = ifelse(grepl("anaerobe", aerobic_status), FALSE, TRUE)) %>%
mutate(gram_positive = ifelse(gram_stain == "Gram-positive", TRUE, FALSE)) %>%
mutate(gram_negative = ifelse(gram_stain == "Gram-negative", TRUE, FALSE))
View(phenotypes_species)
phenotypes_species <- utils::read.delim(here::here("data-raw", "species_0831.txt"), sep = "\t", header = TRUE) %>%
select(name, aerobic_status, gram_stain, doi) %>%
unique() %>%
mutate(level = "Species") %>%
mutate(anaerobe = ifelse(grepl("anaerobe", aerobic_status), ifelse(grepl("aerobe, microaerobe, or anaerobe|microaerobe or anaerobe|facultative anaerobe", aerobic_status), FALSE, TRUE), FALSE)) %>%
mutate(aerobe = ifelse(grepl("anaerobe|not indicated", aerobic_status), FALSE, TRUE)) %>%
mutate(gram_positive = ifelse(gram_stain == "Gram-positive", TRUE, FALSE)) %>%
mutate(gram_negative = ifelse(gram_stain == "Gram-negative", TRUE, FALSE))
View(phenotypes_genus)
phenotypes_genus <- utils::read.delim(here::here("data-raw", "genera_0831.txt"), sep = "\t", header = TRUE) %>%
select(name, aerobic_status, gram_stain, doi) %>%
unique() %>%
mutate(level = "Genus") %>%
mutate(anaerobe = ifelse(grepl("anaerobe", aerobic_status), ifelse(grepl("microaerobe or anaerobe|facultative anaerobe", aerobic_status), FALSE, TRUE), FALSE)) %>%
mutate(aerobe = ifelse(grepl("anaerobe|not indicated|variable", aerobic_status), FALSE, TRUE)) %>%
mutate(gram_positive = ifelse(gram_stain == "Gram-positive", TRUE, FALSE)) %>%
mutate(gram_negative = ifelse(gram_stain == "Gram-negative", TRUE, FALSE)) %>%
mutate(doi = as.character(doi), name = as.character(name))
View(phenotypes_genus)
phenotypes_species <- utils::read.delim(here::here("data-raw", "species_0831.txt"), sep = "\t", header = TRUE) %>%
select(name, aerobic_status, gram_stain, doi) %>%
unique() %>%
mutate(level = "Species") %>%
mutate(anaerobe = ifelse(grepl("anaerobe", aerobic_status), ifelse(grepl("aerobe, microaerobe, or anaerobe|microaerobe or anaerobe|facultative anaerobe", aerobic_status), FALSE, TRUE), FALSE)) %>%
mutate(aerobe = ifelse(grepl("anaerobe|not indicated|aerotolerant", aerobic_status), FALSE, TRUE)) %>%
mutate(gram_positive = ifelse(gram_stain == "Gram-positive", TRUE, FALSE)) %>%
mutate(gram_negative = ifelse(gram_stain == "Gram-negative", TRUE, FALSE)) %>%
mutate(doi = as.character(doi), name = as.character(name))
phenotypes_species <- utils::read.delim(here::here("data-raw", "species_0831.txt"), sep = "\t", header = TRUE) %>%
select(name, aerobic_status, gram_stain, doi) %>%
unique() %>%
mutate(level = "Species") %>%
mutate(anaerobe = ifelse(grepl("anaerobe", aerobic_status), ifelse(grepl("aerobe, microaerobe, or anaerobe|microaerobe or anaerobe|facultative anaerobe", aerobic_status), FALSE, TRUE), FALSE)) %>%
mutate(aerobe = ifelse(grepl("anaerobe|not indicated|aerotolerant|variable", aerobic_status), FALSE, TRUE)) %>%
mutate(gram_positive = ifelse(gram_stain == "Gram-positive", TRUE, FALSE)) %>%
mutate(gram_negative = ifelse(gram_stain == "Gram-negative", TRUE, FALSE))
##manually curated genus phenotypes from Ceylan
phenotypes_genus <- utils::read.delim(here::here("data-raw", "genera_0831.txt"), sep = "\t", header = TRUE) %>%
select(name, aerobic_status, gram_stain, doi) %>%
unique() %>%
mutate(level = "Genus") %>%
mutate(anaerobe = ifelse(grepl("anaerobe", aerobic_status), ifelse(grepl("microaerobe or anaerobe|facultative anaerobe", aerobic_status), FALSE, TRUE), FALSE)) %>%
mutate(aerobe = ifelse(grepl("anaerobe|not indicated|variable", aerobic_status), FALSE, TRUE)) %>%
mutate(gram_positive = ifelse(gram_stain == "Gram-positive", TRUE, FALSE)) %>%
mutate(gram_negative = ifelse(gram_stain == "Gram-negative", TRUE, FALSE)) %>%
mutate(doi = as.character(doi), name = as.character(name)) %>%
select(-c(aerobic_status, gram_stain)) %>%
pivot_longer(cols = c("anaerobe", "aerobe", "gram_positive", "gram_negative"), values_to = "boo", names_to = "attribute")
phenotypes_genus[phenotypes_genus$name=="Gemella"&phenotypes_genus$attribute=="gram_positive", "boo"] <- TRUE
phenotypes_genus <- phenotypes_genus[-which(phenotypes_genus$name=="Bifidobacterium"&phenotypes_genus$attribute=="anaerobe"), ]
##manually curated genus phenotypes from Ceylan
phenotypes_genus <- utils::read.delim(here::here("data-raw", "genera_0831.txt"), sep = "\t", header = TRUE) %>%
select(name, aerobic_status, gram_stain, doi) %>%
unique() %>%
mutate(level = "Genus") %>%
mutate(anaerobe = ifelse(grepl("anaerobe", aerobic_status), ifelse(grepl("microaerobe or anaerobe|facultative anaerobe", aerobic_status), FALSE, TRUE), FALSE)) %>%
mutate(aerobe = ifelse(grepl("anaerobe|not indicated|variable", aerobic_status), FALSE, TRUE)) %>%
mutate(gram_positive = ifelse(gram_stain == "Gram-positive", TRUE, FALSE)) %>%
mutate(gram_negative = ifelse(gram_stain == "Gram-negative", TRUE, FALSE)) %>%
mutate(doi = as.character(doi), name = as.character(name)) %>%
select(-c(aerobic_status, gram_stain)) %>%
pivot_longer(cols = c("anaerobe", "aerobe", "gram_positive", "gram_negative"), values_to = "boo", names_to = "attribute")
phenotypes_genus[phenotypes_genus$name=="Gemella"&phenotypes_genus$attribute=="gram_positive", "boo"] <- TRUE
phenotypes_genus[phenotypes_genus$name=="Gemella"&phenotypes_genus$attribute=="gram_negative", "boo"] <- FALSE
phenotypes_genus <- phenotypes_genus[-which(phenotypes_genus$name=="Bifidobacterium"&phenotypes_genus$attribute=="anaerobe"), ]
View(phenotypes_genus)
##manually curated genus phenotypes from Ceylan
phenotypes_genus <- utils::read.delim(here::here("data-raw", "genera_0831.txt"), sep = "\t", header = TRUE) %>%
select(name, aerobic_status, gram_stain, doi) %>%
unique() %>%
mutate(level = "Genus") %>%
mutate(anaerobe = ifelse(grepl("anaerobe", aerobic_status), ifelse(grepl("microaerobe or anaerobe|facultative anaerobe", aerobic_status), FALSE, TRUE), FALSE)) %>%
mutate(aerobe = ifelse(grepl("anaerobe|not indicated|variable", aerobic_status), FALSE, TRUE)) %>%
mutate(gram_positive = ifelse(gram_stain == "Gram-positive", TRUE, FALSE)) %>%
mutate(gram_negative = ifelse(gram_stain == "Gram-negative", TRUE, FALSE)) %>%
mutate(doi = as.character(doi), name = as.character(name)) %>%
select(-c(aerobic_status, gram_stain)) %>%
pivot_longer(cols = c("anaerobe", "aerobe", "gram_positive", "gram_negative"), values_to = "boo", names_to = "attribute")
phenotypes_genus[phenotypes_genus$name=="Gemella"&phenotypes_genus$attribute=="gram_positive", "boo"] <- TRUE
phenotypes_genus[phenotypes_genus$name=="Gemella"&phenotypes_genus$attribute=="gram_negative", "boo"] <- FALSE
phenotypes_genus <- phenotypes_genus[-which(phenotypes_genus$name=="Bifidobacterium"&phenotypes_genus$attribute=="anaerobe"), ]
phenotypes_genus <- utils::read.delim(here::here("data-raw", "genera_0831.txt"), sep = "\t", header = TRUE) %>%
select(name, aerobic_status, gram_stain, doi) %>%
unique() %>%
mutate(level = "Genus") %>%
mutate(anaerobe = ifelse(grepl("anaerobe", aerobic_status), ifelse(grepl("microaerobe or anaerobe|facultative anaerobe", aerobic_status), FALSE, TRUE), FALSE)) %>%
mutate(aerobe = ifelse(grepl("anaerobe|not indicated|variable", aerobic_status), FALSE, TRUE)) %>%
mutate(gram_positive = ifelse(gram_stain == "Gram-positive", TRUE, FALSE)) %>%
mutate(gram_negative = ifelse(gram_stain == "Gram-negative", TRUE, FALSE)) %>%
mutate(doi = as.character(doi), name = as.character(name)) %>%
select(-c(aerobic_status, gram_stain)) %>%
pivot_longer(cols = c("anaerobe", "aerobe", "gram_positive", "gram_negative"), values_to = "boo", names_to = "attribute")
phenotypes_genus <- utils::read.delim(here::here("data-raw", "genera_0831.txt"), sep = "\t", header = TRUE) %>%
select(name, aerobic_status, gram_stain, doi) %>%
unique() %>%
mutate(level = "Genus") %>%
mutate(anaerobe = ifelse(grepl("anaerobe", aerobic_status), ifelse(grepl("microaerobe or anaerobe|facultative anaerobe", aerobic_status), FALSE, TRUE), FALSE)) %>%
mutate(aerobe = ifelse(grepl("anaerobe|not indicated|variable", aerobic_status), FALSE, TRUE)) %>%
mutate(gram_positive = ifelse(gram_stain == "Gram-positive", TRUE, FALSE)) %>%
mutate(gram_negative = ifelse(gram_stain == "Gram-negative", TRUE, FALSE)) %>%
mutate(doi = as.character(doi), name = as.character(name))
##manually curated genus phenotypes from Ceylan
phenotypes_genus <- utils::read.delim(here::here("data-raw", "genera_0831.txt"), sep = "\t", header = TRUE) %>%
select(name, aerobic_status, gram_stain, doi) %>%
unique() %>%
mutate(level = "Genus") %>%
mutate(anaerobe = ifelse(grepl("anaerobe", aerobic_status), ifelse(grepl("microaerobe or anaerobe|facultative anaerobe", aerobic_status), FALSE, TRUE), FALSE)) %>%
mutate(aerobe = ifelse(grepl("anaerobe|not indicated|variable", aerobic_status), FALSE, TRUE)) %>%
mutate(gram_positive = ifelse(gram_stain == "Gram-positive", TRUE, FALSE)) %>%
mutate(gram_negative = ifelse(gram_stain == "Gram-negative", TRUE, FALSE)) %>%
mutate(doi = as.character(doi), name = as.character(name)) %>%
select(-c(aerobic_status, gram_stain)) %>%
pivot_longer(cols = c("anaerobe", "aerobe", "gram_positive", "gram_negative"), values_to = "boo", names_to = "attribute")
phenotypes_genus[phenotypes_genus$name=="Gemella"&phenotypes_genus$attribute=="gram_positive", "boo"] <- TRUE
phenotypes_genus[phenotypes_genus$name=="Gemella"&phenotypes_genus$attribute=="gram_negative", "boo"] <- FALSE
phenotypes_genus <- phenotypes_genus[-which(phenotypes_genus$name=="Bifidobacterium"&phenotypes_genus$attribute=="anaerobe"), ]
##manually curated species phenotypes from Ceylan
phenotypes_species <- utils::read.delim(here::here("data-raw", "species_0831.txt"), sep = "\t", header = TRUE) %>%
select(name, aerobic_status, gram_stain, doi) %>%
unique() %>%
mutate(level = "Species") %>%
mutate(anaerobe = ifelse(grepl("anaerobe", aerobic_status), ifelse(grepl("aerobe, microaerobe, or anaerobe|microaerobe or anaerobe|facultative anaerobe", aerobic_status), FALSE, TRUE), FALSE)) %>%
mutate(aerobe = ifelse(grepl("anaerobe|not indicated|aerotolerant|variable", aerobic_status), FALSE, TRUE)) %>%
mutate(gram_positive = ifelse(gram_stain == "Gram-positive", TRUE, FALSE)) %>%
mutate(gram_negative = ifelse(gram_stain == "Gram-negative", TRUE, FALSE)) %>%
mutate(doi = as.character(doi), name = as.character(name)) %>%
select(-c(aerobic_status, gram_stain)) %>%
pivot_longer(cols = c("anaerobe", "gram_positive"), values_to = "boo", names_to = "attribute")
grep_df <- rbind(phenotypes_genus, phenotypes_species)
##manually curated genus phenotypes from Ceylan
phenotypes_genus <- utils::read.delim(here::here("data-raw", "genera_0831.txt"), sep = "\t", header = TRUE) %>%
select(name, aerobic_status, gram_stain, doi) %>%
unique() %>%
mutate(level = "Genus") %>%
mutate(anaerobe = ifelse(grepl("anaerobe", aerobic_status), ifelse(grepl("microaerobe or anaerobe|facultative anaerobe", aerobic_status), FALSE, TRUE), FALSE)) %>%
mutate(aerobe = ifelse(grepl("anaerobe|not indicated|variable", aerobic_status), FALSE, TRUE)) %>%
mutate(gram_positive = ifelse(gram_stain == "Gram-positive", TRUE, FALSE)) %>%
mutate(gram_negative = ifelse(gram_stain == "Gram-negative", TRUE, FALSE)) %>%
mutate(doi = as.character(doi), name = as.character(name)) %>%
select(-c(aerobic_status, gram_stain)) %>%
pivot_longer(cols = c("anaerobe", "aerobe", "gram_positive", "gram_negative"), values_to = "boo", names_to = "attribute")
phenotypes_genus[phenotypes_genus$name=="Gemella"&phenotypes_genus$attribute=="gram_positive", "boo"] <- TRUE
phenotypes_genus[phenotypes_genus$name=="Gemella"&phenotypes_genus$attribute=="gram_negative", "boo"] <- FALSE
phenotypes_genus <- phenotypes_genus[-which(phenotypes_genus$name=="Bifidobacterium"&phenotypes_genus$attribute=="anaerobe"), ]
##manually curated species phenotypes from Ceylan
phenotypes_species <- utils::read.delim(here::here("data-raw", "species_0831.txt"), sep = "\t", header = TRUE) %>%
select(name, aerobic_status, gram_stain, doi) %>%
unique() %>%
mutate(level = "Species") %>%
mutate(anaerobe = ifelse(grepl("anaerobe", aerobic_status), ifelse(grepl("aerobe, microaerobe, or anaerobe|microaerobe or anaerobe|facultative anaerobe", aerobic_status), FALSE, TRUE), FALSE)) %>%
mutate(aerobe = ifelse(grepl("anaerobe|not indicated|aerotolerant|variable", aerobic_status), FALSE, TRUE)) %>%
mutate(gram_positive = ifelse(gram_stain == "Gram-positive", TRUE, FALSE)) %>%
mutate(gram_negative = ifelse(gram_stain == "Gram-negative", TRUE, FALSE)) %>%
mutate(doi = as.character(doi), name = as.character(name)) %>%
select(-c(aerobic_status, gram_stain)) %>%
pivot_longer(cols = c("anaerobe", "gram_positive"), values_to = "boo", names_to = "attribute")
grep_df <- rbind(phenotypes_genus, phenotypes_species)
View(phenotypes_species)
View(phenotypes_genus)
##manually curated genus phenotypes from Ceylan
phenotypes_genus <- utils::read.delim(here::here("data-raw", "genera_0831.txt"), sep = "\t", header = TRUE) %>%
select(name, aerobic_status, gram_stain, doi) %>%
unique() %>%
mutate(level = "Genus") %>%
mutate(anaerobe = ifelse(grepl("anaerobe", aerobic_status), ifelse(grepl("microaerobe or anaerobe|facultative anaerobe", aerobic_status), FALSE, TRUE), FALSE)) %>%
mutate(aerobe = ifelse(grepl("anaerobe|not indicated|variable", aerobic_status), FALSE, TRUE)) %>%
mutate(gram_positive = ifelse(gram_stain == "Gram-positive", TRUE, FALSE)) %>%
mutate(gram_negative = ifelse(gram_stain == "Gram-negative", TRUE, FALSE)) %>%
mutate(doi = as.character(doi), name = as.character(name)) %>%
select(-c(aerobic_status, gram_stain)) %>%
pivot_longer(cols = c("anaerobe", "aerobe", "gram_positive", "gram_negative"), values_to = "boo", names_to = "attribute")
phenotypes_genus[phenotypes_genus$name=="Gemella"&phenotypes_genus$attribute=="gram_positive", "boo"] <- TRUE
phenotypes_genus[phenotypes_genus$name=="Gemella"&phenotypes_genus$attribute=="gram_negative", "boo"] <- FALSE
phenotypes_genus <- phenotypes_genus[-which(phenotypes_genus$name=="Bifidobacterium"&phenotypes_genus$attribute=="anaerobe"), ]
##manually curated species phenotypes from Ceylan
phenotypes_species <- utils::read.delim(here::here("data-raw", "species_0831.txt"), sep = "\t", header = TRUE) %>%
select(name, aerobic_status, gram_stain, doi) %>%
unique() %>%
mutate(level = "Species") %>%
mutate(anaerobe = ifelse(grepl("anaerobe", aerobic_status), ifelse(grepl("aerobe, microaerobe, or anaerobe|microaerobe or anaerobe|facultative anaerobe", aerobic_status), FALSE, TRUE), FALSE)) %>%
mutate(aerobe = ifelse(grepl("anaerobe|not indicated|aerotolerant|variable", aerobic_status), FALSE, TRUE)) %>%
mutate(gram_positive = ifelse(gram_stain == "Gram-positive", TRUE, FALSE)) %>%
mutate(gram_negative = ifelse(gram_stain == "Gram-negative", TRUE, FALSE)) %>%
mutate(doi = as.character(doi), name = as.character(name)) %>%
select(-c(aerobic_status, gram_stain)) %>%
pivot_longer(cols = c("anaerobe", "aerobe", "gram_positive", "gram_negative"), values_to = "boo", names_to = "attribute")
grep_df <- rbind(phenotypes_genus, phenotypes_species)
grep_df <- grep_df[c("attribute", "boo", "name", "level", "doi")]
source('~/Google Drive/core_projects/abx.idx/data-raw/generate_df.R')
vancomycin_index(test_df[1], row.names(test_df))
vancomycin_index(test_df[,1], row.names(test_df))
vancomycin_index(test_df[,4], row.names(test_df))
class(test_df)
?mapply
?apply
apply(test_df, 1, vancomycin_index, row.names(test_df))
apply(test_df, 2, vancomycin_index, row.names(test_df))
View(grep_df)
grep_df$attribute
unique(grep_df$attribute)
library(abx.idx)
library(abx.idx)
?vancomycin_index
library(abx.idx)
?vancomycin_index
?apply
library(abx.idx)
?vancomycin_index
?tetracycline_index
apply(test_df, 2, tetracycline_index, row.names(test_df))
?test_df
library(abx.idx)
?abx_test_df
source('~/Google Drive/core_projects/abx.idx/data-raw/generate_df.R')
source('~/Google Drive/core_projects/abx.idx/data-raw/generate_df.R')
View(grep_df)
library(abx.idx)
?abx_test_df
?grep_df
grep_df
?vancomycin_index
apply(abx_test_df, 2, vancomycin_index, row.names(abx_test_df))
apply(abx_test_df, 2, tetracycline_index, row.names(abx_test_df))
apply(abx_test_df, 2, gram_pos_index, row.names(abx_test_df))
apply(abx_test_df, 2, gram_neg_index, row.names(abx_test_df))
apply(abx_test_df, 2, anaerobes_index, row.names(abx_test_df))
apply(abx_test_df, 2, aerobes_index, row.names(abx_test_df))
is_susceptible(row.names(abx_test_df), c("gram_positive", "vancomycin"))
abx_test_df
abx_test_df
is_susceptible(row.names(abx_test_df), c("gram_positive", "vancomycin"))
apply(abx_test_df, 2, vancomycin_index, row.names(abx_test_df))
log10(1)
log10(.25/.75)
log10(Inf)
log10(1/Inf)
a <- c(1, 1, 0, 1, 1)
a
b <- c(10, 9, 8, 7, 6)
b[a]
b[a == 1]
is_susceptible(row.names(abx_test_df), "anaerobe")
apply(abx_test_df, 2, anaerobes_index, row.names(abx_test_df))
abx_idx_plot()
abx_test_df
log10(0)
is_susceptible(row.names(abx_test_df), "aerobe")
library(abx.idx)
is_susceptible(row.names(abx_test_df), "aerobe")
is_susceptible(row.names(abx_test_df), "anerobe")
abx_test_df
source('~/Google Drive/core_projects/abx.idx/data-raw/generate_df.R')
library(abx.idx)
abx_test_df
is_susceptible(row.names(abx_test_df), "aerobe")
is_susceptible(row.names(abx_test_df), "anerobe")
is_susceptible(row.names(abx_test_df), "anaerobe")
log10(.7/.3)
log10(.75/.25)
apply(abx_test_df, 2, anaerobes_index, row.names(abx_test_df))
log10(.3/.7)
is_susceptible(row.names(abx_test_df), "anaerobe")
is_susceptible(row.names(abx_test_df), "aerobe")
is_susceptible(row.names(abx_test_df), "tetracycline")
source('~/Google Drive/core_projects/abx.idx/data-raw/generate_df.R')
View(grep_df)
yo <- grep_df %>% filter(attribute == "tetracycline")
View(yo)
source('~/Google Drive/core_projects/abx.idx/data-raw/generate_df.R')
yo <- grep_df %>% filter(attribute == "tetracycline")
source('~/Google Drive/core_projects/abx.idx/data-raw/generate_df.R')
source('~/Google Drive/core_projects/abx.idx/data-raw/generate_df.R')
View(grep_df)
library(abx.idx)
?vancomycin_index
apply(abx_test_df, 2, vancomycin_index, row.names(abx_test_d
f
apply(abx_test_df, 2, vancomycin_index, row.names(abx_test_df)
)
apply(abx_test_df, 2, vancomycin_index, row.names(abx_test_df))
apply(abx_test_df, 2, tetracycline_index, row.names(abx_test_df))
is_susceptible(row.names(abx_test_df), "tetracycline")
abx_test_df
log10(.8/.2)
log10(.75/.25)
apply(abx_test_df, 2, aerobe_index, row.names(abx_test_df))
apply(abx_test_df, 2, aerobes_index, row.names(abx_test_df))
apply(abx_test_df, 2, anaerobes_index, row.names(abx_test_df))
is_susceptible(row.names(abx_test_df), "anaerobe")
abx_test_df
log10(.3/.7)
log10(.25/.75)
apply(abx_test_df, 2, gram_pos_index, row.names(abx_test_df))
apply(abx_test_df, 2, gram_neg_index, row.names(abx_test_df))
is_susceptible(row.names(abx_test_df), "gram_positive")
is_susceptible(row.names(abx_test_df), "gram_negative")
?sub
